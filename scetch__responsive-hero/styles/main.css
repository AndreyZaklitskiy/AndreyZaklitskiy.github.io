@charset "UTF-8";

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font: 1em monospace, monospace;
  /* 1 */
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font: 1em monospace, monospace;
  /* 1 */
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font: 100%/1.15 inherit;
  /* 1 */
  /* 1 */
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/*
.example {
    @include adaptive-value("padding", 50, 20, 0);
}
*/

/* px TO % */

/* px TO rem */

/* px TO em */

/* 
    .exampe {
        font-size: rem(42);
    }
*/

html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

body {
  line-height: 1;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
  text-decoration: none;
  transition: 0.2s;
}

a:focus {
  outline: none;
}

ins {
  background: #ff9;
  color: #000;
  text-decoration: none;
}

mark {
  background: #ff9;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

del {
  text-decoration: line-through;
}

abbr[title],
dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

input,
select {
  vertical-align: middle;
}

button {
  transition: 0.2s;
}

button:hover {
  cursor: pointer;
}

button:focus {
  outline: none;
}

::-webkit-input-placeholder {
  color: #000;
  opacity: 0.5;
}

::-moz-placeholder {
  color: #000;
  opacity: 0.5;
}

:-moz-placeholder {
  color: #000;
  opacity: 0.5;
}

:-ms-input-placeholder {
  color: #000;
  opacity: 0.5;
}

:focus::-webkit-input-placeholder {
  color: transparent !important;
}

:focus::-moz-placeholder {
  color: transparent !important;
}

:focus:-moz-placeholder {
  color: transparent !important;
}

:focus:-ms-input-placeholder {
  color: transparent !important;
}

/* ==========[ Подключение шрифтов ]========== */

@font-face {
  font-family: DelaGothicOneRegular;
  font-display: swap;
  src: url("../fonts/DelaGothicOneRegular.woff") format("woff"), url("../fonts/DelaGothicOneRegular.woff2") format("woff2");
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: PoppinsMedium;
  font-display: swap;
  src: url("../fonts/PoppinsMedium.woff") format("woff"), url("../fonts/PoppinsMedium.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
}

/*
Используйте WOFF 2.0 в тех браузерах, которые его поддерживают(актуален).
Добавьте WOFF для остальных.
Применяйте TTF в устаревших браузерах Android (для версий до 4.4).
Добавьте EOT для поддержки устаревших версий IE (до IE9). 
*/

/* ===========[ Ресет ]=========== */

img {
  display: block;
  max-width: 100%;
  height: auto;
}

button {
  border: none;
}

body {
  font-size: calc(16px + 46.5 * (100vw - 320px) / 3220);
}

body.locked {
  overflow: hidden;
  /* Заблокировать прокрутку всего body */
}

/* ===========[ Стили контейнера ]=========== */

.section-header {
  background: url(./../images/texture.png) no-repeat center/cover #141414;
  position: relative;
  max-width: 100vw;
  font-family: "PoppinsMedium", sans-serif;
  overflow: hidden;
  z-index: 1;
}

.section-header::before {
  background: url(../images/main-img.png) no-repeat 0 0/contain;
  content: "";
  position: absolute;
  display: block;
  bottom: -1.696em;
  left: 50%;
  transform: translateX(-50%);
  width: 22.6em;
  height: 15.9em;
  z-index: -1;
}

.section-header:after {
  background: rgba(51, 51, 51, 0.7);
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
}

.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
}

.container:before {
  background: url(./../images/rings.png) no-repeat 0 0/contain;
  content: "";
  position: absolute;
  display: block;
  width: 9.44em;
  height: 0.416em;
  top: 0;
  right: 50%;
  transform: translateX(50%);
}

/* ===========[ Cтили navBar'a ]=========== */

.header-logo {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 4.5em;
}

.header-navBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 1.5em;
  height: 2em;
  padding-bottom: 0.5em;
  border-bottom: 5px solid #ddfe25;
}

.header-list {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100%;
}

.header-list__item {
  position: relative;
  min-width: 4.48em;
  height: 100%;
}

.header-list__item:before {
  background: #f6f6f6;
  content: "";
  position: absolute;
  display: block;
  width: 100%;
  height: 10px;
  left: 0;
  transform: scaleX(0);
  bottom: calc(-0.5em - 7px);
  transition: all 0.3s;
}

.header-list__item:hover .header-list__link {
  transition: all 0.3s;
  color: #ddfe25;
}

.header-list__item:hover::before {
  display: block;
  transform: scaleX(1);
}

.header-list__link {
  display: block;
  height: 100%;
  width: 100%;
  line-height: 2em;
  color: #f6f6f6;
  text-align: center;
}

.navBar-dropdown {
  background: #141414;
  position: absolute;
  height: 100%;
  width: 100vw;
  top: -100%;
  left: 0;
  scale: 0;
  z-index: 9;
  transition: all 0.8s;
}

.navBar-dropdown.open {
  top: 0;
  scale: 1;
}

.navBar-dropdown .header-list {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: auto 0;
}

.navBar-dropdown .header-list__item {
  display: block;
  height: auto;
  width: 100%;
}

.navBar-dropdown .header-list__item:before {
  display: none;
}

.navBar-dropdown .header-list__item:hover .header-list__link {
  transition: all 0.3s;
  color: #ddfe25;
}

.navBar-dropdown .header-list__item:hover::before {
  display: none;
}

.header-navBar__btn {
  background: transparent;
  font-size: calc(16px + 46.5 * (100vw - 320px) / 3220);
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.248em;
  height: 100%;
  border: none;
}

.header-navBar__btn .header-search-btn__img {
  width: 0.816em;
  height: 0.816em;
}

.header-navBar__btn:hover {
  scale: 1.05;
}

.header-hamburger {
  background: transparent;
  font-size: calc(16px + 46.5 * (100vw - 320px) / 3220);
  height: 1.152em;
  cursor: pointer;
  z-index: 1000;
}

.header-hamburger .hamburger-inner {
  background: #ddfe25;
  position: relative;
  display: block;
  width: 1.248em;
  height: 0.128em;
  transition: all 0.3s;
}

.header-hamburger .hamburger-inner:before,
.header-hamburger .hamburger-inner:after {
  background: #ddfe25;
  content: "";
  position: absolute;
  display: block;
  left: 0;
  width: 100%;
  height: 0.128em;
}

.header-hamburger .hamburger-inner:before {
  transition: all 0.5s;
  top: -0.384em;
}

.header-hamburger .hamburger-inner:after {
  transition: all 0.5s;
  bottom: -0.384em;
}

.header-hamburger:hover {
  scale: 1.05;
}

.header-hamburger.active {
  opacity: 0;
}

.header-hamburger.active .hamburger-inner {
  background: transparent;
}

.header-hamburger.active .hamburger-inner:before {
  top: 0;
  transform: rotate(-135deg);
}

.header-hamburger.active .hamburger-inner:after {
  transition: all 0.7s;
  bottom: 0;
  transform: rotate(135deg);
}

.navBar-dropdown .header-hamburger {
  opacity: 1;
  position: fixed;
  top: 2em;
  right: 2em;
}

/* ===========[ Стили главного экрана ]=========== */

.main-title__wrapper {
  font: 2.4em/1em "DelaGothicOneRegular", sans-serif;
  position: absolute;
  top: 0.3em;
  left: 50%;
  transform: translateX(-50%);
  text-transform: uppercase;
  text-align: center;
}

.main-title {
  color: #ddfe25;
  width: 10.6em;
}

.header-content {
  margin: auto 0;
  position: relative;
  padding-top: 1.5em;
  z-index: 1;
}

.header-content__columns {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  -moz-column-gap: 40px;
  column-gap: 40px;
}

.header-content__column {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1.12em 0 2em;
  max-width: 10.816em;
}

.header-content__column_left {
  align-items: flex-start;
}

.header-content__column_left .header-content__image {
  max-width: 4.5em;
}

.header-content__column_right {
  align-items: flex-end;
  text-align: right;
}

.header-content__column_right .header-content__image {
  max-width: 3.7em;
}

.header-content__image {
  margin-bottom: 2em;
}

.header-content__title {
  margin-bottom: 1em;
  font-size: 1.3em;
  line-height: 1.3em;
  color: #ddfe25;
}

.header-content__text {
  margin-bottom: 1em;
  font-size: 0.9em;
  line-height: 1.24em;
  color: #f6f6f6;
}

.header-content__link-btn {
  font: 1em "PoppinsMedium", sans-serif;
  background: #ddfe25;
  margin-top: auto;
  min-width: 7em;
  text-align: center;
  padding: 0.6em 1.2em;
  border-radius: 1.5em;
  color: #141414;
}

.header-content__link-btn:hover {
  scale: 1.05;
  transition: all 0.3s;
  box-shadow: 2px 2px 10px #141414;
}

/*==========[ @media queries ]==========*/

@media screen and (min-width: 1449.98px) {
  body {
    font-size: calc(26px + 36 * (100vw - 1450px) / 2000);
  }

  .container {
    max-width: 100%;
    padding: 0 2.88em 0;
  }
}

@media screen and (max-width: 1449.98px) {
  .container {
    max-width: 1370px;
    padding: 0 40px;
  }

  .header-navBar {
    border-bottom: 3px solid #ddfe25;
    padding-bottom: 0.5em;
  }

  .header-list__item::before {
    height: 6px;
    bottom: calc(-0.5em - 4px);
  }
}

@media screen and (max-width: 1199.98px) {
  .section-header::before {
    opacity: 0.7;
  }

  .container {
    min-height: auto;
    padding: 0 15px;
  }
}

@media screen and (max-width: 767.98px) {
  body {
    font-size: 16px;
  }

  .header-logo {
    width: 100px;
  }

  .header-navBar {
    padding-bottom: 1em;
    border-bottom: 2px solid #ddfe25;
  }

  .header-list__item::before {
    height: 5px;
    bottom: calc(-1em - 3px);
  }

  .header-navBar__btn {
    font-size: 24px;
  }

  .header-hamburger {
    font-size: 16px;
  }
}

@media screen and (max-width: 575.98px) {
  .header-list__item {
    display: none;
  }

  .main-title__wrapper {
    font-size: 2em;
  }

  .main-title {
    width: 10.6em;
  }
}

@media screen and (max-width: 479.98px) {
  .section-header::before {
    transform: translateX(-70%);
    opacity: 0.5;
  }

  .header-content {
    flex: 2 1 80%;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    height: 100%;
  }

  .main-title__wrapper {
    position: relative;
    top: 0;
    text-align: center;
    margin-bottom: 20px;
  }

  .main-title {
    width: auto;
  }

  .header-content__column {
    max-width: 100%;
    padding: 0 0 2em;
  }

  .header-content__image {
    margin-bottom: 2em;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */