@charset "UTF-8";[class*=__container]{max-width:91.875rem;margin:0 auto}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
@keyframes blackoutIn{0%{opacity:0}to{opacity:1}}@keyframes blackoutOut{0%{opacity:1}to{opacity:0}}html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}a,hr{padding:0}hr{box-sizing:content-box;overflow:visible;display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0}code,kbd,pre,samp{font:1em monospace,monospace}a{margin:0;font-size:100%;vertical-align:baseline;background:0 0;text-decoration:none;transition:.2s}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}sub,sup{line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}abbr,address,article,aside,audio,b,blockquote,body,canvas,caption,cite,code,dd,del,details,dfn,div,dl,dt,em,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,p,pre,q,samp,section,small,span,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,ul,var,video{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:0 0}body{position:relative;display:flex;flex-direction:column;overflow:hidden;height:100%;line-height:1.2}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}a:focus{outline:0}ins,mark{background:#ff9;color:#000}ins{text-decoration:none}mark{font-style:italic;font-weight:700}del{text-decoration:line-through}abbr[title],dfn[title]{border-bottom:1px dotted;cursor:help}table{border-collapse:collapse;border-spacing:0}input,select{vertical-align:middle}button{transition:.2s}button:hover{cursor:pointer}button:focus{outline:0}::-webkit-input-placeholder{color:#000;opacity:.5}::-moz-placeholder{color:#000;opacity:.5}:-moz-placeholder{color:#000;opacity:.5}:-ms-input-placeholder{color:#000;opacity:.5}:focus::-webkit-input-placeholder{color:transparent!important}:focus::-moz-placeholder{color:transparent!important}:focus:-moz-placeholder{color:transparent!important}:focus:-ms-input-placeholder{color:transparent!important}*{box-sizing:border-box}html{position:relative;min-height:100%;overflow-x:hidden}html.locked{overflow:hidden}img{width:100%;height:auto}.container,.navigation{position:relative;display:flex}.container{max-width:1440px;margin:0 auto;min-height:100vh}.navigation{flex:0 1 300px;padding:36px 24px 76px 28px;flex-direction:column}.logo,.logo__link{color:#000;display:flex}.logo{font:600 1.625rem "Poppins",sans-serif;letter-spacing:.5px;z-index:3}.logo__link{align-items:center}.logo__img{margin-right:8px}.logo__version{margin-left:4px;color:#838383;font-size:.625rem;font-weight:500}.navigation__logo{margin-bottom:53px}.main-menu__logo{display:none;font-size:1rem;padding:23px 0 30px}.hamburger{z-index:2;display:none;font-size:26px;height:1.152em;cursor:pointer;border:0}.hamburger .hamburger-inner{background:#000;position:relative;display:block;width:1.248em;height:.128em;transition:all .3s;border-radius:5px}.hamburger .hamburger-inner:after,.hamburger .hamburger-inner:before{background:#000;content:"";position:absolute;display:block;left:0;width:100%;height:.128em;border-radius:5px}.hamburger .hamburger-inner:before{transition:all .5s;top:-.384em}.hamburger .hamburger-inner:after{transition:all .5s;bottom:-.384em}.hamburger:hover{scale:1.05}.hamburger,.hamburger.active .hamburger-inner{background:0 0}.hamburger.active .hamburger-inner:before{top:0;transform:rotate(-135deg)}.hamburger.active .hamburger-inner:after{transition:all .7s;bottom:0;transform:rotate(135deg)}.main-menu__hamburger{display:none;position:absolute;top:26px;right:15px}.navigation__hamburger{margin-left:auto;margin-right:15px}.navigation__main-menu{margin-bottom:auto}.main-menu{position:relative;height:100vh;max-width:300px;height:auto;z-index:1;transition:all .6s}.main-menu.open{left:0}.main-field:after,.main-menu.open::before{position:absolute;content:"";left:0;width:100%}.main-menu.open::before{background:#fff;z-index:2;top:0;height:80px}.menu-list__item{background:#fff;margin-bottom:18px;border-radius:8px;display:flex;align-items:center;padding:10px 8px 12px 11px;color:#9197b3;cursor:pointer;transition:all .3s}.menu-list__item_active{background:#5932ea;color:#fff}.menu-list__item_active .menu-list__icon-symbol_stroke use{stroke:#fff}.menu-list__item_active .menu-list__icon-symbol_fill use{fill:#fff}.menu-list__icon-symbol{margin-right:14px}.menu-list__icon-symbol_stroke use{stroke:#9197b3;fill:transparent}.menu-list__icon-symbol_fill use{fill:#9197b3}.menu-list__text{font:500 .875rem "Poppins",sans-serif;margin-right:auto;text-transform:capitalize}.user-link{font:14px "Poppins",sans-serif;display:flex;align-items:center}.user-link__img-wrap{display:inline-block;height:42px;width:42px;border-radius:50%;overflow:hidden;margin-right:12px}.user-link__text-wrap{display:inline-block}.user-link__name{font:500 .875rem "Poppins",sans-serif;color:#000}.user-link__status{font:400 .75rem "Poppins",sans-serif;flex-grow:1;text-align:center;color:#757575}.main-field{position:relative;flex:4 1 auto}.main-field:after{background:rgba(0,0,0,.5);display:none;top:-10%;height:110%}.main-field.main-field_menu-open:after{display:block;animation:blackoutIn 1s ease-in}.main-field.main-field_menu-out:after{display:block;animation:blackoutOut 1s ease-in}.page-customers{display:flex;flex-direction:column;width:auto;padding:41px 75px;background:#fafbff}.page-customers__title{margin-bottom:51px}.title{font:500 1.5rem "Poppins",sans-serif;color:#000;letter-spacing:0;text-transform:capitalize}.customers-inner{background:#fff;border-radius:30px;padding:30px 53px 16px 38px;overflow:hidden;width:100%}.search-block{margin-bottom:26px;gap:15px;display:flex;align-items:center;justify-content:space-between;flex-wrap:wrap}.search-block__title{font:600 1.375rem "Poppins",sans-serif;margin-bottom:7px;color:#000;text-transform:capitalize;letter-spacing:-.22px}.search-block__subtitle{font:400 .875rem "Poppins",sans-serif;color:#16c098;text-transform:capitalize;letter-spacing:-.14px}.search-block__input-wrap{width:215px;padding:10px 8px;display:flex;align-items:center;background:#f9fbff;border-radius:10px;margin-bottom:-5px;margin-right:10px}.search-block__icon{margin-right:5px}.search-block__icon use{fill:transparent;stroke:#7e7e7e}.search-block__input{font:400 .75rem "Poppins",sans-serif;background:0 0;color:#000;border:0;letter-spacing:-.12px;outline:0}.customers-list__row{display:flex;padding:18.5px 0;-moz-column-gap:10px;column-gap:10px;white-space:nowrap}.customers-list__col{display:inline-flex;align-items:center;width:135px;overflow:hidden;flex-shrink:0}.customers-list__col:nth-child(1){width:162px}.customers-list__col:nth-child(2){width:121px}.customers-list__col:nth-child(3){width:146px}.customers-list__col:nth-child(4){width:197px}.customers-list__col:nth-child(5){width:130px}.customers-list__col:nth-child(6){width:80px;overflow:visible}.customers-list__text{font:500 .875rem "Poppins",sans-serif;color:#292d32;letter-spacing:-.14px}.customers-list__row_header{position:relative;padding:14px 0}.customers-list__row_header .customers-list__text{color:#b5b7c0}.customers-list__row_header:after{background:#eee;content:"";position:absolute;display:block;bottom:0;left:-50px;width:1000px;height:1px}.customers-list__row_data{position:relative;border-bottom:1px solid #eee}.customers-list__status{text-align:center;width:80px;padding:4px 12px;display:inline-flex;justify-content:center;align-items:center;border-radius:4px;color:#fff}.customers-list__status_active{color:#008767;border:1px solid #00b087;background:rgba(22,192,152,.38)}.customers-list__status_inactive{border:1px solid #df0404;background:#ffc5c5;color:#df0404}.pagination-block{margin-right:10px;padding:30px 0 40px;display:flex;align-items:center;justify-content:space-between;flex-wrap:wrap;gap:20px;text-align:center}.pagination-block__text{font:500 .875rem "Poppins",sans-serif;color:#b5b7c0;letter-spacing:-.14px}.pagination{font:500 .75rem/100% "Poppins",sans-serif;display:flex;align-items:center;gap:12px;color:#404b52;letter-spacing:-.12px}.pagination__list{display:flex;align-items:baseline;gap:12px}.pagination__item{border-radius:4px;border:1px solid #eee;background:#f5f5f5;width:25px;height:24px;display:inline-flex;justify-content:center;align-items:center;font-family:"Poppins",sans-serif;cursor:pointer}.pagination__item_active{border:1px solid #5932ea;background:#5932ea;color:#fff}@media screen and (max-width:1439.98px){.navigation,.page-customers{padding:35px 15px 50px}.customers-inner{width:calc(300px + 700*(100vw - 320px)/1150);padding:25px 20px 15px}}@media screen and (max-width:574.98px){.user-link__text-wrap{display:none}}@media screen and (max-width:84.375em){.customers-list{overflow:auto}.customers-list__row_header{border-bottom:1px solid #eee}.customers-list__row_header:after{display:none}}@media screen and (max-width:61.99875em){.container{flex-direction:column}.navigation{flex:0 1 auto;flex-direction:row;justify-content:space-between;align-items:center;padding:22px 15px 20px}.navigation__logo{margin-bottom:0}.navigation__hamburger{display:block}.main-menu{position:absolute;width:255px;padding-left:15px;padding-right:15px;top:0;left:-100%;background-color:#fff;overflow-y:auto}.main-menu__list{padding-top:85px}.menu-list{height:100vh;overflow-y:auto}.page-customers{padding:15px}.page-customers__title{margin-bottom:15px}.customers-inner{width:calc(300px + 1150*(100vw - 320px)/1150)}}@media screen and (max-width:47.99875em){.customers-inner{padding:15px}.pagination-block{flex-direction:column;align-items:flex-end;margin-right:0}.pagination-block__info{order:2}.pagination{order:1}}@media screen and (max-width:29.99875em){.navigation__logo{display:none}.main-menu__logo{display:block}.hamburger{margin-left:0;margin-right:auto}.main-menu__hamburger{display:block}.main-menu{z-index:5;width:230px}.main-menu__list{padding-top:0}.search-block{justify-content:center}.search-block__title-wrap{text-align:center}}@media (any-hover:hover){.menu-list__item:hover{transition:all .3s;background:rgba(89,50,234,.5);color:#fff}.menu-list__item:hover .menu-list__icon-symbol_stroke use{stroke:#fff}.menu-list__item:hover .menu-list__icon-symbol_fill use{fill:#fff}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */